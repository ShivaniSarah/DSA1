# link: https://leetcode.com/problems/product-of-array-except-self/

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]


class Solution:
    def productExceptSelf(self, arr: List[int]) -> List[int]:
        
        n = len(arr)
        
        # Base case
        if n == 1:
            return [0]
        
        prod = [1] * n
        temp = 1
        
        # In this loop, temp variable contains product of elements on left side excluding arr[i]
        for i in range(n):
            prod[i] = temp
            temp *= arr[i]
        
        # Initialize temp to 1 for product on right side
        temp = 1
        
        # In this loop, temp variable contains product of elements on right side excluding arr[i]
        for i in range(n - 1, -1, -1):
            prod[i] *= temp
            temp *= arr[i]
        
        return prod
