https://leetcode.com/problems/is-graph-bipartite/description/

# Bipartite Graph
Color the graph with 2 colors such that no adjacent nodes have same color.

We can color a linear graph with no cycles - its a bipartite graph
Any graph with even cycle length is bipartite.
Any graph with odd cycle length is not bipartite.

# Bipartite Graph using DFS:

class Solution {
    private boolean dfs(int node, int col, int color[], 
    int[][] adj) {
        
        color[node] = col; 
        
        // traverse adjacent nodes
        for(int it : adj[node]) {
            // if uncoloured
            if(color[it] == -1) {
                if(dfs(it, 1 - col, color, adj) == false) return false; 
            }
            // if previously coloured and have the same colour
            else if(color[it] == col) {
                return false; 
            }
        }
        
        return true; 
    }
    public boolean isBipartite(int[][] adj) {
        int V = adj.length;
        int color[] = new int[V];
	    for(int i = 0;i<V;i++) color[i] = -1; 
	    
	    // for connected components
	    for(int i = 0;i<V;i++) {
	        if(color[i] == -1) {
	            if(dfs(i, 0, color, adj) == false) return false; 
	        }
	    }
	    return true; 
    }
}

# Bipartite Graph using BFS:

# code here


