https://leetcode.com/problems/merge-k-sorted-lists/description/

You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6

# java

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> p=new PriorityQueue<>((a,b)->a.val-b.val);
      for(int i=0;i<lists.length;i++)
    {  
        ListNode x=lists[i];
        while(x!=null){
            p.add(x);
            x=x.next;
        }
    }

        ListNode ans=p.poll();
        ListNode temp=ans;
        while(p.size()>0){
            temp.next=p.poll();
            temp=temp.next;
        }
        if(temp!=null)
        temp.next=null;
        return ans;
    }
}

