Trapping rainwater
<img src="https://www.google.com/imgres?q=rainwater%20trapping%20problem&imgurl=https%3A%2F%2Fassets.leetcode.com%2Fuploads%2F2018%2F10%2F22%2Frainwatertrap.png&imgrefurl=https%3A%2F%2Fleetcode.com%2Fproblems%2Ftrapping-rain-water%2F&docid=Ty_OI-OnplDF-M&tbnid=2O6o417QFrA5bM&vet=12ahUKEwiYo5PE18SGAxXfs1YBHSwjABwQM3oECBQQAA..i&w=412&h=161&hcb=2&ved=2ahUKEwiYo5PE18SGAxXfs1YBHSwjABwQM3oECBQQAA">
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.




class Solution:
    def trap(self, height: List[int]) -> int:
        n=len(height)
        left = [height[0]]
        right =[height[n-1]]
        
        for i in range(1,n):
            left.append(max(left[-1],height[i]))
            right.append(max(right[-1],height[n-i-1]))
        right.reverse()
        water=0
        for i in range(n):
            water += min(left[i],right[i]) - height[i]
        return water
 	
