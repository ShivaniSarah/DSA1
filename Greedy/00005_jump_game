https://leetcode.com/problems/jump-game/description/

You are given an integer array nums. You are initially positioned at the array's first index, 
and each element in the array represents your maximum jump length at that position.
Return true if you can reach the last index, or false otherwise.

Example 1:
Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

Example 2:
Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, 
which makes it impossible to reach the last index.

# Java

class Solution {
    public boolean canJump(int[] nums) {
        // Initialize the maximum index that can be reached
        int maxIndex = 0;

        // Iterate through each index of the array
        for (int i = 0; i < nums.length; i++) {
            // If the current index is greater than the maximum reachable 
// index it means we cannot move forward and should return false
            if (i > maxIndex) {
                return false;
            }

            // Update the maximum index that can be reached by comparing the 
// current maxIndex with the sum of the current index and the maximum jump from that index
            maxIndex = Math.max(maxIndex, i + nums[i]);
        }

        // If we complete the loop, it means we can reach the last index
        return true;
    }
}

