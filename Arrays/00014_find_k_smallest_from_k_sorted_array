Given k sorted arrays of possibly different sizes, find m-th smallest value in the merged array.

https://www.geeksforgeeks.org/find-m-th-smallest-value-in-k-sorted-arrays/?ref=ml_lbp

Examples: 

Input: m = 5     
      arr[][] = { {1, 3},
                  {2, 4, 6},
                  {0, 9, 10, 11}} ;
Output: 4
Explanation The merged array would
be {0 1 2 3 4 6 9 10 11}.  The 5-th 
smallest element in this merged
array is 4.

# java

// This function takes an array of arrays as an
// argument and all arrays are assumed to be
// sorted. It returns m-th smallest element in
// the array obtained after merging the given
// arrays.
import java.util.*;
public class Main { 
	public static int mThLargest(int[][] arr, int m) { 

		// Create a min heap. Every 
		// heap node has first element of an array 
		PriorityQueue<Pair> pq = new PriorityQueue<Pair>(); 
		for (int i = 0; i < arr.length; i++) { 
			pq.add(new Pair(arr[i][0], i, 0)); 
		} 

		// Now one by one get the minimum element 
		// from min heap and replace it with next 
		// element of its array 
		int count = 0; 
		int i=0;
		int j=0;
		while (count < m && !pq.isEmpty()) { 
			Pair curr = pq.poll(); 

			// i ==> Array Number 
			// j ==> Index in the array number 
			i = curr.arrayNumber; 
			j = curr.index; 

			// The next element belongs to same array as current. 
			if (j + 1 < arr[i].length) { 
				pq.add(new Pair(arr[i][j + 1], i, j + 1)); 
			} 
			count++; 
		} 
		return arr[i][j]; 
	} 

	// Driver Code 
	public static void main(String[] args) { 
		int[][] arr = { { 2, 6, 12 }, { 1, 9 }, { 23, 34, 90, 2000 } }; 
		int m = 4; 
		System.out.println(mThLargest(arr, m)); 
	} 
} 

//Class to store array number and index 
class Pair implements Comparable<Pair> { 
	int value; 
	int arrayNumber; 
	int index; 

	// Constructor 
	public Pair(int v, int i, int j) { 
		value = v; 
		arrayNumber = i; 
		index = j; 
	} 

	// Compare two pair according to their values. 
	public int compareTo(Pair o) { 
		return this.value - o.value; 
	} 
}

#  python

# Python program to find m-th smallest element
# in the merged arrays.

from heapq import *

# This function takes an array of arrays as an
# argument and all arrays are assumed to be
# sorted. It returns m-th smallest element in
# the array obtained after merging the given
# arrays.
def mThLargest(arr, m):

	# Create a min heap. Every
	# heap node has first element of an array
	pq = []
	for i in range(len(arr)):
		heappush(pq, (arr[i][0], (i, 0)))

	# Now one by one get the minimum element
	# from min heap and replace it with next
	# element of its array
	count = 0
	while count < m and pq:
		curr = heappop(pq)

		# i ==> Array Number
		# j ==> Index in the array number
		i = curr[1][0]
		j = curr[1][1]

		# The next element belongs to same array as current.
		if j + 1 < len(arr[i]):
			heappush(pq, (arr[i][j + 1], (i, j + 1)))
		count += 1

	return arr[i][j]

# Driver Code
arr = [[2, 6, 12], [1, 9], [23, 34, 90, 2000]]
m = 4
print(mThLargest(arr, m))
