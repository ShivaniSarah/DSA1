https://leetcode.com/problems/contains-duplicate-ii/

Contains Duplicate II

Given an integer array nums and an integer k, return true if there are two distinct
indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false

# java

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if (nums.length <= k){
            k = nums.length - 1;
        } int count=0;
        for (int i = 0; i < nums.length - 1; i++) {
            int j = i + 1;
            while (j < nums.length && j <= i + k) {
                if (nums[i] == nums[j]) {
                    return true;
                }
                j++;
                count++;
                if(count > 9999){
                    return false;
                }
            }
        }
        return false;
    }
} 


or

class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if(nums == null || nums.length < 2 || k == 0)
            return false;
        int i = 0;
        Set<Integer> hset = new HashSet<Integer>();
        for(int j = 0; j < nums.length; j++) {
            if(!hset.add(nums[j])){
                return true;
            }
            if(hset.size() >= k + 1) {
                hset.remove(nums[i++]);
            }
        }
        return false;
    }
}
