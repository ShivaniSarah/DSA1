Frog Jump with K Distance/ Learn to write 1D DP
This is a follow-up question to “Frog Jump” discussed in the previous article. In the previous question, 
the frog was allowed to jump either one or two steps at a time. In this question,
the frog is allowed to jump up to ‘K’ steps at a time. If K=4, the frog can jump 1,2,3, or 4 steps at every index.





import sys
class Solution:
    def minimizeCost(self, height, n, k):
        dp=[-1 for i in range(n)]
        if n> 0:
            dp[0]=0
        if n>1:
            dp[1]=abs(height[1]-height[0])
            
        for i in range(2,n):
            min_i=sys.maxsize
            if k>=1:
                for j in range(1,k+1):
                    if i-j>=0:
                        
                        l= dp[i-j]+abs(height[i]-height[i-j])
                        min_i=min(min_i,l)
            
            dp[i] = min_i
        
        return dp[n-1]

# Space optimised DP III is not possible
