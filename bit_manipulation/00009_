https://www.geeksforgeeks.org/problems/find-xor-of-numbers-from-l-to-r/1

Find XOR of numbers from L to R.
Difficulty: EasyAccuracy: 50.0%Submissions: 24K+Points: 2
You are given two integers L and R, your task is to find the XOR of elements of the range [L, R].

Example:

Input: 
L = 4, R = 8 
Output:
8 
Explanation:
4 ^ 5 ^ 6 ^ 7 ^ 8 = 8

# java

class Solution {
    public static int findXOR(int l, int r) {
        int left = xor(l-1);
        int right  = xor(r);
        return left^right;
    }
    public static int xor(int n){
        if(n%4 == 1) return 1;
        if(n%4 == 2) return n+1;
        if(n%4 == 3) return 0;
        if(n%4 == 0) return n;
        
        return -1;
    }
}

or

class Solution {
    public static int findXOR(int l, int r) {
        return xorTo(r) ^ xorTo(l - 1);
    }

    private static int xorTo(int n) {
        // Return XOR from 0 to n based on n % 4
        switch (n % 4) {
            case 0: return n;
            case 1: return 1;
            case 2: return n + 1;
            case 3: return 0;
            default: throw new IllegalArgumentException("Unexpected value: " + n % 4);
        }
}
}
