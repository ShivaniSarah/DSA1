https://www.geeksforgeeks.org/problems/-minimum-number-of-coins4426/1

Given an infinite supply of each denomination of Indian currency { 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 } and a target value N.
Find the minimum number of coins and/or notes needed to make the change for Rs N.
You must return the list containing the value of coins required. 

Example 1:
Input: N = 43
Output: 20 20 2 1
Explaination: 
Minimum number of coins and notes needed is 4 to make 43. 

Example 2:
Input: N = 1000
Output: 500 500
Explaination: minimum possible notes is 2 notes of 500.

class Solution {
    public List<Integer> minPartition(int N) {
        int[] coins = {1, 2, 5, 10, 20, 50, 100, 200, 500, 2000};
        List<Integer> ans = new ArrayList<>();
        for (int i = coins.length - 1; i >= 0; i--) {
            while (N >= coins[i]) {
                N -= coins[i];
                ans.add(coins[i]);
            }
        }
        return ans;
    }
}

or

class Solution:
    def minPartition(self, N):
        coins=[ 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 ]
        n = len(coins)
        ans=[]
        for i in range(n - 1, -1, -1):
            while N >= coins[i]:
                N -= coins[i]
                ans.append(coins[i])
        return ans
