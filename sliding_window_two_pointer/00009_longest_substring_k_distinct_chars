https://www.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1

Longest K unique characters substring
Given a string you need to print the size of the longest possible substring that has exactly K unique characters. 
If there is no possible substring then print -1.

Example 1:
Input:
S = "aabacbebebe", K = 3
Output: 
7
Explanation: 
"cbebebe" is the longest substring with 3 distinct characters.

Example 2:
Input: 
S = "aaaa", K = 2
Output: -1
Explanation: 
There's no substring with 2 distinct characters.

# Java

class Solution {
    public int longestkSubstr(String s, int k) {
        int n = s.length();
        if (n < k) return -1;
        
        Map<Character, Integer> freqMap = new HashMap<>();
        int left = 0;
        int maxLength = -1;
        
        for (int right = 0; right < n; right++) {
            char currentChar = s.charAt(right);
            freqMap.put(currentChar, freqMap.getOrDefault(currentChar, 0) + 1);
            
            while (freqMap.size() > k) {
                char leftChar = s.charAt(left);
                freqMap.put(leftChar, freqMap.get(leftChar) - 1);
                if (freqMap.get(leftChar) == 0) {
                    freqMap.remove(leftChar);
                }
                left++;
            }
            
            if (freqMap.size() == k) {
                maxLength = Math.max(maxLength, right - left + 1);
            }
        }
        
        return maxLength;
    }
}
