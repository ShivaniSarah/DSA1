# return length of longest subarray with sum zero
https://www.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1?category%5B%5D=Hash&company%5B%5D=Amazon&page=1&query=category%5B%5DHashcompany%5B%5DAmazonpage1company%5B%5DAmazoncategory%5B%5DHash&utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=largest-subarray-with-0-sum

Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

class Solution:
    def maxLen(self, n, arr):
        
        mpp = {}
        maxi = 0
        sum = 0
        for i in range(n):
            sum += arr[i]
            if sum == 0:
                maxi = i+1
            else:
                if sum in mpp:
                    maxi = max(maxi, i - mpp[sum])
                else:
                    mpp[sum] = i
        return maxi

# brute:

def solve(a: List[int]) -> int:
    maxx = 0
    for i in range(len(a)):
        sum = 0
        for j in range(i, len(a)):
            sum += a[j]
            if sum == 0:
                maxx = max(maxx, j-i+1)
    return maxx
