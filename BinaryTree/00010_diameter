https://leetcode.com/problems/diameter-of-binary-tree/

Diameter of Binary Tree

Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. 
This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

Example 1:

Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].

# java

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Info {
    int diameter;
    int height;

    public Info(int diameter, int height) {
        this.diameter = diameter;
        this.height = height;
    }
}

class Solution {
    public Info fun(TreeNode root) {
        if (root == null) {
            return new Info(0, 0);
        }
        Info leftData = fun(root.left);
        Info rightData = fun(root.right);

        int currDiameter = Math.max(Math.max(leftData.diameter, rightData.diameter),
                leftData.height + rightData.height);
        int currHeight = Math.max(leftData.height, rightData.height) + 1;

        return new Info(currDiameter, currHeight);

    }

    public int diameterOfBinaryTree(TreeNode root) {
        Info ans = fun(root);
        return ans.diameter;
    }
}
