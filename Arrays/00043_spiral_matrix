https://leetcode.com/problems/spiral-matrix/description/

Given an m x n matrix, return all elements of the matrix in spiral order.

Example 1:
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

Example 2:
Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]


public class Solution {
    public List<Integer> spiralOrder(int[][] mat) {
        List<Integer> ans = new ArrayList<>();
        
        if (mat == null || mat.length == 0) return ans;

        int n = mat.length;       // Number of rows
        int m = mat[0].length;    // Number of columns
        
        int top = 0;
        int left = 0;
        int bottom = n - 1;
        int right = m - 1;

        while (top <= bottom && left <= right) {
            for (int i = left; i <= right; i++) {
                ans.add(mat[top][i]);
            }
            top++;
            
            for (int i = top; i <= bottom; i++) {
                ans.add(mat[i][right]);
            }
            right--;
            
            if (top <= bottom) {
                for (int i = right; i >= left; i--) {
                    ans.add(mat[bottom][i]);
                }
                bottom--;
            }
            
            if (left <= right) {
                for (int i = bottom; i >= top; i--) {
                    ans.add(mat[i][left]);
                }
                left++;
            }
        }
        
        return ans;
    }
}

or

class Solution:
    def spiralOrder(self, mat: List[List[int]]) -> List[int]:
        ans = []
    
        n = len(mat) 
        m = len(mat[0]) 
    
        top = 0
        left = 0
        bottom = n - 1
        right = m - 1

        while (top <= bottom and left <= right):
            for i in range(left, right + 1):
                ans.append(mat[top][i])

            top += 1

            for i in range(top, bottom + 1):
                ans.append(mat[i][right])

            right -= 1

            if (top <= bottom):
                for i in range(right, left - 1, -1):
                    ans.append(mat[bottom][i])

                bottom -= 1

            if (left <= right):
                for i in range(bottom, top -1, -1):
                    ans.append(mat[i][left])

                left += 1

        return ans
