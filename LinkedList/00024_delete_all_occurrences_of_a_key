https://www.geeksforgeeks.org/problems/delete-all-occurrences-of-a-given-key-in-a-doubly-linked-list/1

Delete all occurrences of a given key in a doubly linked list

You are given the head_ref of a doubly Linked List and a Key. Your task is to delete all occurrences of the given key if it is present and return the new DLL.

Example1:

Input: 
2<->2<->10<->8<->4<->2<->5<->2
2
Output: 
10<->8<->4<->5
Explanation: 
All Occurences of 2 have been deleted.

# java

/* Structure of Doubly Linked List
class Node
{
	int data;
	Node next;
	Node prev;
	Node(int data)
	{
	    this.data = data;
	    next = prev = null;
	}
}*/
class Solution {
    static Node deleteAllOccurOfX(Node head, int x) {
        // Write your code here
        Node list =head;
        while(list!=null){
            Node prev =null;
            if(list.prev!=null)
            prev= list.prev;
           
            while(list!=null && list.data==x){
                list = list.next;
            }
            if(list!=null)
            list.prev=prev;
            else {prev.next=null; break;}
            if(prev!=null)
            prev.next=list;
            else {
            head=list;
            }
            list=list.next;
        }
        return head;
    }
}
